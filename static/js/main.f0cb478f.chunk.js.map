{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/TableLink/TableLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navigation","role","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","TableLink","person","name","sex","slug","PeopleTable","people","personId","useParams","map","born","died","fatherName","father","motherName","mother","PeoplePage","useState","setPeople","isError","setError","isLoaded","setLoaded","useEffect","getPeopleFromSever","peopleFromServer","linkedPeople","newPerson","find","human","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f0cb478f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const TableLink: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { TableLink } from '../TableLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personId } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {people.map(person => {\n          const {\n            born,\n            died,\n            fatherName,\n            father,\n            motherName,\n            mother,\n            sex,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames(\n                { 'has-background-warning': personId === slug },\n              )}\n            >\n              <td>\n                <TableLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <TableLink person={mother} />\n                  )\n                  : motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? (\n                    <TableLink person={father} />\n                  )\n                  : fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setError] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoaded(false);\n    setError(false);\n\n    const getPeopleFromSever = async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        const linkedPeople = peopleFromServer.map(person => {\n          const newPerson = { ...person };\n\n          const mother = peopleFromServer\n            .find(human => human.name === person.motherName);\n          const father = peopleFromServer\n            .find(human => human.name === person.fatherName);\n\n          if (mother) {\n            newPerson.mother = mother;\n          }\n\n          if (father) {\n            newPerson.father = father;\n          }\n\n          return newPerson;\n        });\n\n        setPeople(linkedPeople);\n      } catch {\n        setError(true);\n      } finally {\n        setLoaded(true);\n      }\n    };\n\n    getPeopleFromSever();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoaded && !isError && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoaded && !isError\n            ? <Loader />\n            : <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personId\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}